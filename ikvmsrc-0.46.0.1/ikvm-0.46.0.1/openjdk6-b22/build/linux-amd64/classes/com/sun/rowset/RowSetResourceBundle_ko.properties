xmlrch.badvalue=\uC798\uBABB\uB41C \uAC12; \uB110\uC77C \uC218 \uC5C6\uB294 \uB4F1\uB85D \uC815\uBCF4
cachedrowsetimpl.invalcolnm=\uC798\uBABB\uB41C \uC5F4 \uC774\uB984\uC785\uB2C8\uB2E4.
joinrowsetimpl.initerror=JoinRowSet \uCD08\uAE30\uD654 \uC624\uB958
crswriter.tname=writeData\uC5D0\uC11C \uD14C\uC774\uBE14 \uC774\uB984\uC744 \uD655\uC778\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.movetoins=moveToInsertRow\: CONCUR_READ_ONLY
cachedrowsetimpl.binstream=\uC774\uC9C4 \uC2A4\uD2B8\uB9BC\uC744 \uC77D\uB294 \uB370 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.invalstate=\uC798\uBABB\uB41C \uC0C1\uD0DC\uC785\uB2C8\uB2E4.
joinrowsetimpl.notinstance=Rowset\uC758 \uC778\uC2A4\uD134\uC2A4\uAC00 \uC544\uB2D9\uB2C8\uB2E4.
insertrow.novalue=\uAC12\uC774 \uC0BD\uC785\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
wrsxmlwriter.sqlex=SQLException\: {0} 
cachedrowsetimpl.last=\uB9C8\uC9C0\uB9C9\: TYPE_FORWARD_ONLY
wrsxmlreader.parseerr=** \uAD6C\uBB38 \uBD84\uC11D \uC624\uB958
cachedrowsetimpl.type=\uC720\uD615\: {0}
joinrowsetimpl.notdefined=\uC815\uC758\uB41C \uACB0\uD569 \uC720\uD615\uC774 \uC544\uB2D9\uB2C8\uB2E4.
joinrowsetimpl.genericerr=\uC77C\uBC18 joinrowset \uCD08\uAE30 \uC624\uB958
cachedrowsetimpl.beforefirst=beforeFirst\: \uC798\uBABB\uB41C \uCEE4\uC11C \uC791\uC5C5\uC785\uB2C8\uB2E4.
filteredrowsetimpl.absolute=\uC808\uB300\: \uC798\uBABB\uB41C \uCEE4\uC11C \uC791\uC5C5\uC785\uB2C8\uB2E4.
cachedrowsetimpl.failedins=\uD589\uC744 \uC0BD\uC785\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
webrowsetimpl.nullhash=WebRowSetImpl \uC778\uC2A4\uD134\uC2A4\uB97C \uC778\uC2A4\uD134\uC2A4\uD654\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uAD6C\uC131\uC790\uC5D0 \uB110 Hashtable\uC774 \uC81C\uACF5\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.movetoins2=moveToInsertRow\: \uC798\uBABB\uB41C \uC5F4 \uAC1C\uC218\uC785\uB2C8\uB2E4.
wrsxmlreader.uri=, uri 
cachedrowsetimpl.movetoins1=moveToInsertRow\: \uBA54\uD0C0 \uB370\uC774\uD130\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.matchcols2=\uC77C\uCE58 \uC5F4\uC740 \uB110 \uB610\uB294 \uBE48 \uBB38\uC790\uC5F4\uC77C \uC218\uB294 \uC5C6\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.matchcols1=\uC77C\uCE58 \uC5F4\uC740 0\uAC1C \uC774\uC0C1\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.
jdbcrowsetimpl.setmatchcols=\uC77C\uCE58 \uC5F4\uC744 \uC124\uC815\uD55C \uB2E4\uC74C\uC5D0 \uAC00\uC838\uC624\uC2ED\uC2DC\uC624.
webrowsetimpl.invalidrd=\uC798\uBABB\uB41C \uD310\uB3C5\uAE30\uC785\uB2C8\uB2E4.
cachedrowsetimpl.accfailed=acceptChanges\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.clonefail=\uBCF5\uC81C \uC2E4\uD328\: {0}
jdbcrowsetimpl.connect=JdbcRowSet(\uC5F0\uACB0) JNDI\uAC00 \uC5F0\uACB0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.bytefail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getByte\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.invalidp=\uC798\uBABB\uB41C \uC9C0\uC18D\uC131 \uACF5\uAE09\uC790\uAC00 \uC0DD\uC131\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.usecolname=\uC5F4 \uC774\uB984\uC744 unsetMatchColumn\uC758 \uC778\uC218\uB85C \uC0AC\uC6A9\uD558\uC2ED\uC2DC\uC624.
cachedrowsetimpl.posupdate=\uC704\uCE58 \uC9C0\uC815 \uC5C5\uB370\uC774\uD2B8\uB97C \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.matchcols=\uC77C\uCE58 \uC5F4\uC774 \uC124\uC815\uB41C \uC5F4\uACFC \uAC19\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.paramtype=\uB9E4\uAC1C \uBCC0\uC218 \uC720\uD615\uC744 \uCD94\uB860\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.unsetmatch=\uC124\uC815 \uD574\uC81C\uD560 \uC5F4\uC774 \uC124\uC815\uB41C \uC5F4\uACFC \uAC19\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
webrowsetimpl.invalidwr=\uC798\uBABB\uB41C \uAE30\uB85D\uAE30\uC785\uB2C8\uB2E4.
cachedrowsetimpl.numrows=\uD589 \uAC1C\uC218\uAC00 0\uBCF4\uB2E4 \uC791\uAC70\uB098 \uBC18\uC785 \uD06C\uAE30\uBCF4\uB2E4 \uC791\uC2B5\uB2C8\uB2E4.
filteredrowsetimpl.relative=\uC0C1\uB300\: \uC798\uBABB\uB41C \uCEE4\uC11C \uC791\uC5C5\uC785\uB2C8\uB2E4.
cachedrowsetimpl.intfail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getInt\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
xmlrch.errconstr=\uD589\uC744 \uB9CC\uB4DC\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0}
xmlrch.errupdate=update \uD589\uC744 \uB9CC\uB4DC\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0}
xmlrch.errinsert=insert \uD589\uC744 \uB9CC\uB4DC\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0}
cachedrowsetimpl.populate=\uC798\uBABB\uB41C ResultSet \uAC1D\uCCB4\uAC00 \uC81C\uACF5\uB418\uC5B4 \uBA54\uC18C\uB4DC\uB97C \uCC44\uC6B8 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
syncrsimpl.indexval=\uC0C9\uC778 \uAC12\uC774 \uBC94\uC704\uB97C \uBC97\uC5B4\uB0AC\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.invalidcp=\uC798\uBABB\uB41C \uCEE4\uC11C \uC704\uCE58\uC785\uB2C8\uB2E4.
cachedrowsetimpl.longfail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getLong\uC774 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
crswriter.params2=params2\uC758 \uAC12\: {0}
crswriter.params1=params1\uC758 \uAC12\: {0}
wsrxmlwriter.notproper=\uC62C\uBC14\uB978 \uC720\uD615\uC774 \uC544\uB2D9\uB2C8\uB2E4.
cachedrowsetimpl.timefail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getLong\uC774 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4. \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
syncrsimpl.valtores=\uD655\uC778\uD560 \uAC12\uC774 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uB098 cachedrowset\uC5D0 \uC788\uC744 \uC218 \uC788\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.illegalop=\uC0BD\uC785\uB41C \uD589\uC774 \uC544\uB2CC \uD589\uC5D0\uC11C \uC798\uBABB\uB41C \uC791\uC5C5\uC744 \uC218\uD589\uD588\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.invalidop=\uD589\uC744 \uC0BD\uC785\uD558\uB294 \uB3D9\uC548 \uC798\uBABB\uB41C \uC791\uC5C5\uC744 \uC218\uD589\uD588\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.datefail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getDate\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4. \uBCC0\uD658\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.setmatchcols=\uC77C\uCE58 \uC5F4\uC744 \uC124\uC815\uD55C \uB2E4\uC74C\uC5D0 \uAC00\uC838\uC624\uC2ED\uC2DC\uC624.
jdbcrowsetimpl.usecolid=\uC5F4 ID\uB97C unsetMatchColumn\uC758 \uC778\uC218\uB85C \uC0AC\uC6A9\uD558\uC2ED\uC2DC\uC624.
cachedrowsetimpl.pagesize=\uD398\uC774\uC9C0 \uD06C\uAE30\uB294 0\uBCF4\uB2E4 \uC791\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.nullhash=CachedRowSetImpl \uC778\uC2A4\uD134\uC2A4\uB97C \uC778\uC2A4\uD134\uC2A4\uD654\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4. \uAD6C\uC131\uC790\uC5D0 \uB110 Hashtable\uC774 \uC81C\uACF5\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
crswriter.connect=\uC5F0\uACB0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
wrsxmlwriter.failedwrite=\uAC12\uC744 \uC4F0\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
xmlrch.errmetadata=\uBA54\uD0C0\uB370\uC774\uD130\uB97C \uC124\uC815\uD558\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0} 
rixml.unsupp=RIXMLProvider\uC5D0\uC11C \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
joinrowsetimpl.notsupported=\uC774 \uACB0\uD569 \uC720\uD615\uC740 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.startpos=\uC2DC\uC791 \uC704\uCE58\uB294 \uC74C\uC218\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
xmlrch.errdel=\uD589\uC744 \uC81C\uAC70\uD558\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0}
joinrowsetimpl.numnotequal=Rowset\uC758 \uC694\uC18C \uC218\uAC00 \uC77C\uCE58 \uC5F4\uACFC \uAC19\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
wrsxmlreader.line=, \uC904 
xmlrch.errinsdel=insdel \uD589\uC744 \uB9CC\uB4DC\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0}
cachedrowsetimpl.fwdonly=ResultSet\uB294 \uC804\uB2EC \uC804\uC6A9\uC785\uB2C8\uB2E4.
cachedrowsetimpl.unsetmatch2=\uC5F4 ID\uB97C unsetMatchColumn\uC758 \uC778\uC218\uB85C \uC0AC\uC6A9\uD558\uC2ED\uC2DC\uC624.
cachedrowsetimpl.unsetmatch1=\uC5F4 \uC774\uB984\uC744 unsetMatchColumn\uC758 \uC778\uC218\uB85C \uC0AC\uC6A9\uD558\uC2ED\uC2DC\uC624.
wrsxmlreader.readxml=readXML\: {0}
joinrowsetimpl.matchnotset=\uACB0\uD569\uD560 \uC77C\uCE58 \uC5F4\uC744 \uC124\uC815\uD558\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.keycols=\uC798\uBABB\uB41C \uD0A4 \uC5F4\uC785\uB2C8\uB2E4.
cachedrowsetimpl.updateins=\uD589\uC744 \uC0BD\uC785\uD558\uB294 \uB3D9\uC548 updateRow\uAC00 \uD638\uCD9C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.absolute=\uC808\uB300\: \uC798\uBABB\uB41C \uCEE4\uC11C \uC704\uCE58\uC785\uB2C8\uB2E4.
cachedrowsetimpl.dtypemismt=\uB370\uC774\uD130 \uC720\uD615\uC774 \uC77C\uCE58\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
crsreader.paramtype=\uB9E4\uAC1C \uBCC0\uC218 \uC720\uD615\uC744 \uCD94\uB860\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.matchcols2=\uC77C\uCE58 \uC5F4\uC740 \uBE44\uC5B4 \uC788\uAC70\uB098 \uB110 \uBB38\uC790\uC5F4\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.
cachedrowsetimpl.matchcols1=\uC77C\uCE58 \uC5F4\uC774 0\uAC1C \uC774\uC0C1\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.
cachedrowsetimpl.matchcols=\uC77C\uCE58 \uC5F4\uC774 \uC124\uC815\uB41C \uC5F4\uACFC \uAC19\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.invalidcol=\uC798\uBABB\uB41C \uC5F4 \uC0C9\uC778\uC785\uB2C8\uB2E4.
wrsxmlwriter.ioex=IOException\: {0}
cachedrowsetimpl.first=\uCC98\uC74C\: \uC798\uBABB\uB41C \uCEE4\uC11C \uC791\uC5C5\uC785\uB2C8\uB2E4.
cachedrowsetimpl.doublefail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getDouble\uC774 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
jdbcrowsetimpl.resnotupd=ResultSet\uC740 \uC5C5\uB370\uC774\uD2B8\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.shortfail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getShort\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
crsreader.connect=(JNDI) \uC5F0\uACB0\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.tablename=\uD14C\uC774\uBE14 \uC774\uB984\uC740 \uB110\uC77C \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
syncrsimpl.syncnotpos=\uB3D9\uAE30\uD654\uB97C \uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
xmlrch.warning=** \uACBD\uACE0
cachedrowsetimpl.asciistream=Ascii \uC2A4\uD2B8\uB9BC\uC744 \uC77D\uB294 \uB370 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
filteredrowsetimpl.notallowed=\uC774 \uAC12\uC740 \uD544\uD130\uB97C \uD1B5\uACFC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
riop.locking=\uB4F1\uAE09 \uC7A0\uAE08\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
xmlrch=errupdrow \= \uD589\uC744 \uC5C5\uB370\uC774\uD2B8\uD558\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0}
cachedrowsetimpl.unsetmatch=\uC124\uC815 \uD574\uC81C\uD560 \uC5F4\uC774 \uC124\uC815\uB41C \uC5F4\uACFC \uAC19\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.opnotsupp=\uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0\uC11C \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uB294 \uC791\uC5C5\uC785\uB2C8\uB2E4.
xmlrch.badvalue1=\uC798\uBABB\uB41C \uAC12; \uB110\uC77C \uC218 \uC5C6\uB294 \uBA54\uD0C0\uB370\uC774\uD130
syncrsimpl.noconflict=\uC774 \uC5F4\uC740 \uCDA9\uB3CC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
cachedrowsetimpl.nextpage=\uD638\uCD9C\uD558\uAE30 \uC804\uC5D0 \uB370\uC774\uD130\uB97C \uCC44\uC6B0\uC2ED\uC2DC\uC624.
cachedrowsetimpl.relative=\uC0C1\uB300\: \uC798\uBABB\uB41C \uCEE4\uC11C \uC704\uCE58\uC785\uB2C8\uB2E4.
cachedrowsetimpl.pagesize1=\uD398\uC774\uC9C0 \uD06C\uAE30\uB294 maxRows\uBCF4\uB2E4 \uD074 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
xmlrch.line=, \uC904 
cachedrowsetimpl.floatfail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getFloat\uAC00 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
xmlrch.errmap=\uB9E4\uD551\uC744 \uC124\uC815\uD558\uB294 \uC911 \uC624\uB958 \uBC1C\uC0DD\: {0} 
wrsxmlreader.invalidcp=RowSet\uC758 \uB05D\uC5D0 \uB3C4\uB2EC\uD588\uC2B5\uB2C8\uB2E4. \uC798\uBABB\uB41C \uCEE4\uC11C \uC704\uCE58\uC785\uB2C8\uB2E4.
xmlrch.uri=, uri 
cachedrowsetimpl.unableins=\uC778\uC2A4\uD134\uC2A4\uD654 \uD560 \uC218 \uC5C6\uC74C\: {0}
cachedrowsetimpl.boolfail=\uC5F4 {1}\uC758 \uAC12({0})\uC5D0\uC11C getBoolen\uC774 \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
xmlrch.chars=\uBB38\uC790\:
